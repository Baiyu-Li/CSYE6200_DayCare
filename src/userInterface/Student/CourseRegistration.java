/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.Student;

import Controller.SqliteController;
import Model.Organization.Course;
import Model.Organization.Subject;
import Model.Person.Teacher;
import java.awt.CardLayout;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.List;

/**
 * @author Lynn Wei
 */
public class CourseRegistration extends javax.swing.JPanel {

    /**
     * Creates new form CourseRegistration
     */
    JPanel rightPanel;
    int studentId;

    public CourseRegistration(JPanel rp) {
        initComponents();
        rightPanel = rp;
        
    }
    public void setStudentID(int id){
        this.studentId = id;
        populateData();
    }
    public void populateData() {
        List<Object[]> courseList = SqliteController.getAllCourse();
        DefaultTableModel model = (DefaultTableModel) CourseTable.getModel();
        int size = model.getRowCount();
        for (int i = 0; i < size; i++) {
            model.removeRow(0);
        }
        courseList.forEach((e)-> {model.insertRow(courseList.indexOf(e),e);});
       CourseTable.setModel(model);
       /*
        for (Course course : courseList) {
            Object[] row = new Object[7];
            Subject subject = SqliteController.getSubjectModelById(course.getSubjectID());
            Teacher teacher = SqliteController.getTeacherModelById(course.getteacherID());
            row[0] = course.getCourseId();
            row[1] = course.getCourseName();
            row[2] = course.getStartDate()+"-"+course.getEndDate();
            row[3] = course.getStartTime()+"-"+course.getEndTime();
            row[4] = course.getLocation();
            row[5] = subject == null ? "" : subject.getSubjectName();
            row[6] = teacher == null ? "" : teacher.getName();
            model.addRow(row);
        }
       */
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CourseTable = new javax.swing.JTable();
        btnRegister = new javax.swing.JButton();
        btnRegister1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(820, 520));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel7.setText("Course Registration");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 80, -1, -1));

        CourseTable.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        CourseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "StartToEndDate", "Time", "Loaction", "Subejct", "Instructor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(CourseTable);
        if (CourseTable.getColumnModel().getColumnCount() > 0) {
            CourseTable.getColumnModel().getColumn(0).setMaxWidth(50);
            CourseTable.getColumnModel().getColumn(1).setMaxWidth(150);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 800, 181));

        btnRegister.setBackground(new java.awt.Color(255, 255, 255));
        btnRegister.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });
        add(btnRegister, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 380, 110, -1));

        btnRegister1.setBackground(new java.awt.Color(255, 255, 255));
        btnRegister1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnRegister1.setText("<< Back");
        btnRegister1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegister1ActionPerformed(evt);
            }
        });
        add(btnRegister1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 110, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        // TODO add your handling code here:
        int row = CourseTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int id = (int) CourseTable.getValueAt(row, 0);
        SqliteController.insertCourseEnrollTable(id, studentId);
        JOptionPane.showMessageDialog(null, "Course register successful!!", "Warning", JOptionPane.WARNING_MESSAGE);


    }//GEN-LAST:event_btnRegisterActionPerformed

    private void btnRegister1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegister1ActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.show(rightPanel,"ViewStudent");
    }//GEN-LAST:event_btnRegister1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CourseTable;
    private javax.swing.JButton btnRegister;
    private javax.swing.JButton btnRegister1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
