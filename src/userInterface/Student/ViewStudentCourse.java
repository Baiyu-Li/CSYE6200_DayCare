/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userInterface.Student;

import Controller.SqliteController;
import Model.Organization.Course;
import Model.Organization.Subject;
import Model.Person.Student;
import Model.Person.Teacher;
import userInterface.Teacher.*;

import java.awt.CardLayout;
import java.awt.Component;
import java.util.List;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 * @author 83715
 */
public class ViewStudentCourse extends javax.swing.JPanel {

    JPanel rightPanel;
    int studentId;

    /**
     * Creates new form manageTeacher
     */
    public ViewStudentCourse(JPanel rp, int studentId) {
        initComponents();
        rightPanel = rp;
        this.studentId = studentId;
        populateData();
    }

    public void populateData() {
        List<Course> courseList = SqliteController.getCourseModelByStudentId(studentId);
        DefaultTableModel model = (DefaultTableModel) CourseTable.getModel();
        int size = model.getRowCount();
        for (int i = 0; i < size; i++) {
            model.removeRow(0);
        }
        for (Course course : courseList) {
            Object[] row = new Object[7];
            Subject subject = SqliteController.getSubjectModelById(course.getSubjectID());
            Teacher teacher = SqliteController.getTeacherModelById(course.getteacherID());
            row[0] = course.getCourseId();
            row[1] = course.getCourseName();
            row[2] = course.getStartDate()+"-"+course.getEndDate();
            row[3] = course.getStartTime()+"-"+course.getEndTime();
            row[4] = course.getLocation();
            row[5] = subject == null ? "" : subject.getSubjectName();
            row[6] = teacher == null ? "" : teacher.getName();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        btnTrack1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        CourseTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(820, 520));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBack.setBackground(new java.awt.Color(255, 255, 255));
        btnBack.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 90, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("NUID");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 20, -1, -1));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel7.setText("Student Course");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 40, -1, -1));

        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });
        add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 40, 50, -1));

        btnTrack1.setBackground(new java.awt.Color(255, 255, 255));
        btnTrack1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnTrack1.setText("Course Registration");
        btnTrack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrack1ActionPerformed(evt);
            }
        });
        add(btnTrack1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 350, 170, -1));

        CourseTable.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        CourseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "StarttoEndDate", "Time", "Loaction", "Subejct", "Instructor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(CourseTable);
        if (CourseTable.getColumnModel().getColumnCount() > 0) {
            CourseTable.getColumnModel().getColumn(0).setMaxWidth(100);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 780, 180));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
       /* ViewStudent etp = new ViewStudent(rightPanel, studentId);
        rightPanel.remove(this);
        rightPanel.add(etp); */
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.previous(rightPanel);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void btnTrack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrack1ActionPerformed
        // TODO add your handling code here:
        /*ViewStudentUpcomming etp = new ViewStudentUpcomming(rightPanel, studentId);
        rightPanel.removeAll();
        rightPanel.add("viewStudentUpcommingJPanel", etp);
*/
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.last(rightPanel);
    }//GEN-LAST:event_btnTrack1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CourseTable;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnTrack1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables
}
