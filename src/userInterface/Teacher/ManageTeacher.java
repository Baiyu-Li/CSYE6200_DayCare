/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userInterface.Teacher;

import Controller.SqliteController;
import Model.Person.Teacher;

import java.awt.CardLayout;
import java.util.List;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 * @author 83715
 */
public class ManageTeacher extends javax.swing.JPanel {

    static JPanel rightPanel;
    static int tid;
    /**
     * Creates new form manageTeacher
     */
    public ManageTeacher(JPanel rp) {
        initComponents();
        rightPanel = rp;
        refreshTable();
    }

    public void refreshTable() {
        DefaultTableModel model = (DefaultTableModel) TeacherTable.getModel();
        int size = model.getRowCount();
        for (int i = 0; i < size; i++) {
            model.removeRow(0);
        }
        List<Teacher> teacherList = SqliteController.getAllTeacherModel();
        for (Teacher teacher : teacherList) {
            Object[] row = new Object[5];
            row[0] = teacher.getId();
            row[1] = teacher.getfName();
            row[2] = teacher.getlName();
            row[3] = teacher.getAge();
            row[4] = teacher.getGender();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TeacherTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        tbnView = new javax.swing.JButton();
        tbnEnrollTeacher = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(650, 400));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TeacherTable.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        TeacherTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "FirstName", "LastName", "Age", "Gender"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TeacherTable);
        if (TeacherTable.getColumnModel().getColumnCount() > 0) {
            TeacherTable.getColumnModel().getColumn(0).setMaxWidth(50);
            TeacherTable.getColumnModel().getColumn(3).setMaxWidth(50);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 620, 190));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel1.setText("Manage Teacher ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 40, -1, -1));

        btnDelete.setBackground(new java.awt.Color(255, 255, 255));
        btnDelete.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 320, 80, -1));

        tbnView.setBackground(new java.awt.Color(255, 255, 255));
        tbnView.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tbnView.setText("View Detail");
        tbnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbnViewActionPerformed(evt);
            }
        });
        add(tbnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 320, 110, -1));

        tbnEnrollTeacher.setBackground(new java.awt.Color(255, 255, 255));
        tbnEnrollTeacher.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tbnEnrollTeacher.setText("Enroll Teacher");
        tbnEnrollTeacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbnEnrollTeacherActionPerformed(evt);
            }
        });
        add(tbnEnrollTeacher, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 320, 130, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code her
        int row = TeacherTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int id = Integer.parseInt((String) TeacherTable.getValueAt(row, 0));
        Teacher teacher = SqliteController.getTeacherModelById(id);
        if (teacher == null) {
            JOptionPane.showMessageDialog(null, "Teacher has deleted", "Warning", JOptionPane.WARNING_MESSAGE);
            refreshTable();
            return;
        }
        if (teacher.getCourse() != null) {
            JOptionPane.showMessageDialog(null, "Teacher has course, can`t delete", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        boolean result = SqliteController.deleteTeacher(id);
        if (result) {
            JOptionPane.showMessageDialog(this, "Teacher's delete is successful!");
        } else {
            JOptionPane.showMessageDialog(this, "Teacher's delete is fail!");
        }
        
        refreshTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tbnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbnViewActionPerformed
        // TODO add your handling code here:
        int row = TeacherTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }else{
        tid = Integer.parseInt(TeacherTable.getValueAt(row, 0).toString());
        ViewTeacher vt=(ViewTeacher)this.rightPanel.getComponent(10);
        vt.setTeacherID(tid);
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.show(rightPanel,"viewTeacherJPanel");
        }
    }//GEN-LAST:event_tbnViewActionPerformed

    private void tbnEnrollTeacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbnEnrollTeacherActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) rightPanel.getLayout();
        layout.show(rightPanel,"enrollTeacherJPanel");
    }//GEN-LAST:event_tbnEnrollTeacherActionPerformed


    //import value from database
    //public void setTable(List<Object[]> ol) {
//        DefaultTableModel tableModel = (DefaultTableModel) TeacherTable.getModel();
//        tableModel.setColumnIdentifiers(new Object[]{"ID", "FirstName", "LastName", "Age", "Gender"});
//        ol.forEach((e) -> {
//            tableModel.addRow(e);
//        });
//        TeacherTable.setModel(tableModel);
   // }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TeacherTable;
    private javax.swing.JButton btnDelete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton tbnEnrollTeacher;
    private javax.swing.JButton tbnView;
    // End of variables declaration//GEN-END:variables
}
