/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userInterface.Immunization;

import Controller.CourseController;
import userInterface.Student.*;
import Controller.SqliteController;
import userInterface.Teacher.*;
import java.awt.CardLayout;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Floyed
 */
public class ManageStudentImmunization extends javax.swing.JPanel {

    JPanel container;
    
    /**
     * Creates new form manageTeacher
     */
    private CardLayout clayout;
    public ManageStudentImmunization(JPanel container) {
        initComponents();     
        this.container = container;
        SqliteController.test();
        clayout = (CardLayout) container.getLayout();
    }

    public void reloadData(){
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        StudentTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        tbnView1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(650, 400));
        setPreferredSize(new java.awt.Dimension(820, 520));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        StudentTable.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        StudentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "FirstName", "LastName", "Age", "Gender"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(StudentTable);
        if (StudentTable.getColumnModel().getColumnCount() > 0) {
            StudentTable.getColumnModel().getColumn(0).setMaxWidth(60);
            StudentTable.getColumnModel().getColumn(3).setPreferredWidth(60);
            StudentTable.getColumnModel().getColumn(3).setMaxWidth(60);
            StudentTable.getColumnModel().getColumn(4).setMaxWidth(90);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 200, 600, 190));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel1.setText("Manage Immunization Records for Student");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, -1, -1));

        tbnView1.setBackground(new java.awt.Color(255, 255, 255));
        tbnView1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tbnView1.setText("View/Manage Vaccine Information");
        tbnView1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbnView1ActionPerformed(evt);
            }
        });
        add(tbnView1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 400, 250, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void tbnView1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbnView1ActionPerformed
        // TODO add your handling code here:
        //((ViewStudent)this.container.getComponent(7)).setTable(SqliteController.getAllTeacher());

        
        if(!StudentTable.getSelectionModel().isSelectionEmpty()){
            int row = StudentTable.getSelectedRow();
            Object o = StudentTable.getModel().getValueAt(row, 1);
            
            String studentId = String.valueOf(StudentTable.getModel().getValueAt(row, 0).toString());
            Integer age = Integer.parseInt(StudentTable.getModel().getValueAt(row, 3).toString());
            
            if(o != null){
                
                String name=o.toString();

                ViewStudentImmunization vsi = new ViewStudentImmunization(container, name, age, Integer.valueOf(studentId));
                
                // TODO remove
                if(!SqliteController.areVaccineRecordsPresentForStudent(studentId)){
                    System.out.println("Generating vaccine records for student: "+studentId);
                    SqliteController.generateVaccineRecordsForStudent(studentId);
                }
                
                vsi.setTableUpcoming(SqliteController.getAllVaccineRecordsForStudent(studentId));
                /*
                *can't show at first so change to use nickname and use layout.show()
                */
                container.add(vsi,"ViewStudentImmunization");
                CardLayout layout = (CardLayout) container.getLayout();
                layout.show(container,"ViewStudentImmunization");
                
//                clayout.show(container, "viewStudentImmunizationJPanel");
                
            }
        }else{
            JOptionPane.showMessageDialog(null, "Please select a student");
        }
        
        
    }//GEN-LAST:event_tbnView1ActionPerformed
    
    //import value from database
    public void setTable(List<Object[]> ol){
        DefaultTableModel tableModel=(DefaultTableModel) StudentTable.getModel();
        
        while(tableModel.getRowCount() > 0){
            tableModel.removeRow(0);
        }
        tableModel.setColumnIdentifiers(new Object[]{"ID", "FirstName", "LastName", "Age", "Gender"}); 
        ol.forEach((e)-> {tableModel.addRow(e);});
        StudentTable.setModel(tableModel);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable StudentTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton tbnView1;
    // End of variables declaration//GEN-END:variables
}
